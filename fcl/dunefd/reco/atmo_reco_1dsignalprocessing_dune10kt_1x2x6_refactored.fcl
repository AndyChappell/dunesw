#include "reco_dune10kt_1x2x6_wirecell_refactored.fcl"

process_name: rereco

physics.producers:
{
    @table::physics.producers
    caldata:            @local::producer_adcprep
    wclsmcnfsp:         @erase
}


physics.reco: [
    @sequence::dunefd_horizdrift_lowlevelreco,
    @sequence::dunefd_horizdrift_hitdisambiguation,
    @sequence::dunefd_horizdrift_2dclustering,
    @sequence::dunefd_horizdrift_pandora,
    @sequence::dunefd_horizdrift_pmtrack,
    @sequence::dunefd_horizdrift_pmtrack_trajcluster,
    @sequence::dunefd_horizdrift_pmtrack_trajcluster_pfp,
#   @sequence::dunefd_horizdrift_pmtrack_showers,
    @sequence::dunefd_horizdrift_cvn,
 #  @sequence::dunefd_horizdrift_nuenergy,
#   @sequence::pd_reco_path,
         rns
                ]

     
physics.reco[0]: caldata #This is an awful way of changing the running producer from wirecell to caldata.  Erasing the wirecell producer above should give some defence against changing the wrong element (the job will crash if we change the wrong element)

physics.producers.pandora.ConfigFile: "PandoraSettings_Master_Atmos_DUNEFD.xml"
physics.producers.gaushit.CalDataModuleLabel: "caldata"
physics.producers.pmtrack.WireModuleLabel:    "caldata"
physics.producers.pmtracktc.WireModuleLabel:  "caldata"
physics.producers.emtrkmichelid.WireLabel:    "caldata"
#physics.producers.energyrecnumu.WireLabel:    "caldata"
physics.producers.energyrecnue.WireLabel:     "caldata"
physics.producers.energyrecnc.WireLabel:      "caldata"
